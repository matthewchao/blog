<%# app/views/sessions/new.html.erb %>

<h1>Sessions#new</h1>
<p>This is the page for logging in, i.e., Sessions#create </p>

<%# why method: 'post' is not necessary below? how does rails infer that we 
are posting? also, note scope: places the parameters under
params[:session], so for instance we can no longer do params[:email] %>

<%# By the way, the below (if @users.errors.any?) may never actually be triggered, since we do not expect
logins to trigger validations of @user; only creation or updates of the @user object
should do that.%>


<p> Not a user yet? <%= link_to 'Sign up here', new_user_path %> </p>

<%= form_with(url: login_path, scope: :session, local: true) do |form| %>
  <% if false %>
    <% if @user.errors.any? %>
      <div id="error_explanation">
        <h2><%= pluralize(@user.errors.count, "error") %> prohibited this user from logging in:</h2>

        <ul>
          <% @user.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
  <% end %>
  
  <%= render 'shared/flash' %>
  
  <div class="field">
    <%= form.label :email %>
    <%= form.email_field :email %>
  </div>

  <div class="field">
    <%= form.label :password %>
    <%= form.password_field :password %>
  </div>
  
  


  <div class="actions">
    <%# need to put "Log in" below" otherwise the rails default is "Save" %>
    <%= form.submit "Log in" %>
  </div>

  <div class="field">

    <%= form.label :remember_me %>
    <%= form.check_box :remember_me %>
  </div>
<% end %>
